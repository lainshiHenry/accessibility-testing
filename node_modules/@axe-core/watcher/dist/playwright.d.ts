import type { LaunchOptions, Page, BrowserContext } from 'playwright-core';
import Controller from './Controller';
import { type Configuration } from './utils/writeVariables';
/** Options for configuring Playwright and @axe-core/watcher. */
export type Options = Configuration & LaunchOptions;
/**
 * Creates a Playwright config that uses axe extension
 *
 * @param opts Playwright config to extend
 */
export declare function playwrightConfig(opts: Options): LaunchOptions;
export declare class PlaywrightController extends Controller {
    private driver;
    constructor(driver: Page);
    protected executeScript<T>(fn: string | (() => Promise<T>), ...args: unknown[]): Promise<T>;
}
/**
 * @deprecated `wrapPlaywright` is deprecated and may not work as intended. Please use `wrapPlaywrightPage` instead.
 */
export declare const wrapPlaywright: (browserContext: BrowserContext, playwrightController: PlaywrightController) => BrowserContext;
export { wrapPage as wrapPlaywrightPage } from './playwrightWrapping';
