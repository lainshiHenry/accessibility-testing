"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.proxiedGetWithoutAnalyze = exports.proxiedGetFuncWithAnalyze = exports.markAsWrapped = exports.isWrapped = void 0;
const kWrapped = Symbol('axe watcher wrapped');
const isWrapped = (o) => {
    if (!o) {
        return false;
    }
    return o[kWrapped] === true;
};
exports.isWrapped = isWrapped;
const markAsWrapped = (o) => {
    Object.defineProperty(o, kWrapped, {
        configurable: false,
        enumerable: false,
        value: true
    });
};
exports.markAsWrapped = markAsWrapped;
const proxiedGetFuncWithAnalyze = (target, prop, controller) => async (...args) => {
    await controller.analyze({
        __Method: prop,
        __UserRequestedAnalyze: false
    });
    const result = await target[prop].call(target, ...args);
    return result;
};
exports.proxiedGetFuncWithAnalyze = proxiedGetFuncWithAnalyze;
const proxiedGetWithoutAnalyze = (target, prop) => {
    const original = target[prop];
    if (typeof original === 'function') {
        const originalFnName = original.name;
        const boundNameOverride = {
            [originalFnName]: function (...args) {
                return original.call(target, ...args);
            }
        };
        return boundNameOverride[originalFnName];
    }
    return original;
};
exports.proxiedGetWithoutAnalyze = proxiedGetWithoutAnalyze;
//# sourceMappingURL=proxyHandlers.js.map