"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateAxeRunContext = validateAxeRunContext;
function validateAxeRunContext(runContext = undefined) {
    if (!runContext) {
        return;
    }
    if (!isContextObject(runContext)) {
        throw new Error(`\`runContext\` must be an object, an array of objects, or a string. Examples: \n
      - Object: { runContext: { include: 'selector' } }\n
      - Array: { runContext: ['selector1', 'selector2'] }\n
      - String: { runContext: 'selector' }\n

      For more detailed examples: https://www.deque.com/axe/core-documentation/api-documentation/#context-parameter 
      `);
    }
}
function isContextObject(contextSpec) {
    return ['include', 'exclude'].some(prop => objectHasOwn(contextSpec, prop) &&
        isContextProp(contextSpec[prop]));
}
function isContextProp(contextList) {
    return (typeof contextList === 'string' ||
        isLabelledFramesSelector(contextList) ||
        isLabelledShadowDomSelector(contextList) ||
        isArrayLike(contextList));
}
function objectHasOwn(obj, prop) {
    if (!obj || typeof obj !== 'object') {
        return false;
    }
    return Object.prototype.hasOwnProperty.call(obj, prop);
}
function isLabelledFramesSelector(selector) {
    return objectHasOwn(selector, 'fromFrames');
}
function isLabelledShadowDomSelector(selector) {
    return objectHasOwn(selector, 'fromShadowDom');
}
function isArrayLike(arr) {
    return arr && typeof arr === 'object' && typeof arr.length === 'number';
}
//# sourceMappingURL=validateAxeRunContext.js.map