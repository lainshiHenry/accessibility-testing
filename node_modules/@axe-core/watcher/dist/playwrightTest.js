"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const playwright_1 = require("./playwright");
const mergeChromeArgs_1 = __importDefault(require("./utils/mergeChromeArgs"));
const writeVariables_1 = __importDefault(require("./utils/writeVariables"));
const playwrightTest = (options) => {
    let controller = null;
    const { axe, ...config } = options;
    let base;
    let chromium;
    try {
        ;
        ({ test: base, chromium } = require('@playwright/test'));
    }
    catch (error) {
        throw new Error('Unable to load @playwright/test: ' + error.message);
    }
    (0, writeVariables_1.default)(axe);
    const test = base.extend({
        context: async ({}, use) => {
            const context = await chromium.launchPersistentContext('', {
                ...config,
                args: (0, mergeChromeArgs_1.default)(config.args || [], {
                    disableOtherExtensions: true
                })
            });
            await use(context);
            await context.close();
        },
        page: async ({ page }, use) => {
            controller = new playwright_1.PlaywrightController(page);
            page = (0, playwright_1.wrapPlaywrightPage)(page, controller);
            await use(page);
        }
    });
    test.afterEach(async () => {
        await (controller === null || controller === void 0 ? void 0 : controller.flush());
    });
    const expect = test.expect;
    return { test, expect };
};
exports.default = playwrightTest;
//# sourceMappingURL=playwrightTest.js.map