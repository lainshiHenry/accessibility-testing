import type { WebDriver, Navigation, WebElement, TargetLocator } from 'selenium-webdriver';
import type { WebdriverController } from './webdriver';
import { type PossiblyWrapped } from './utils/proxyHandlers';
export declare const wrapDriver: (driver: PossiblyWrapped<WebDriver>, controller: WebdriverController) => WebDriver;
export declare const wrapNavigation: (navigation: PossiblyWrapped<Navigation>, controller: WebdriverController) => Navigation;
export declare const wrapTargetLocator: (locator: PossiblyWrapped<TargetLocator>, controller: WebdriverController) => TargetLocator;
export declare const wrapElement: (element: PossiblyWrapped<WebElement>, controller: WebdriverController) => WebElement;
